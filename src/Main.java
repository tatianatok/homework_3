public class Main {
    public static void main(String[] args) {
        int age = 17;
        if (age >= 18) {
            System.out.println("Поздравляем с совершеннолетием!");
        }
        if (age < 18) {
            System.out.println("Возраст совершеннолетия ещё не наступил, и нужно немного подождать");
        }

        int shcool = 5;
        if (shcool >= 7) {
            System.out.println("Ребенок ходит в школу");
        }
        if (shcool < 7) {
            System.out.println("Ребенок НЕ ходит в школу");
        }

        int univercity = 10;
        if (univercity > 18) {
            System.out.println("Человек уже закончил школу и может отправляться в университет");
        }
        if (univercity < 18) {
            System.out.println("Человек еще не закончил школу");
        }
        int job = 15;
        if (job > 24) {
            System.out.println("Человек окончил университет и ему пора искать первую работу");
        }
        if (job < 24) {
            System.out.println("Человек еще учится в универитете");
        }
        int train = 30;
        if (train >= 60) {
            System.out.println("В вагоне закончились сидячие места. Можно приобрести стоячее место.");
        }
        if (train > 102) {
            System.out.println("В вагоне нет свободных мест.");
        }
        if (train < 60) {
            System.out.println("В вагоне есть свободные сидячие места.");
        }
        int ageElse = 25;
        if (ageElse >= 18) {
            System.out.println("Поздравляем с совершеннолетием!");
        } else {
            System.out.println("Возраст совершеннолетия ещё не наступил, и нужно немного подождать");
        }

        int shcoolElse = 9;
        if (shcoolElse >= 7) {
            System.out.println("Ребенок ходит в школу");
        } else {
            System.out.println("Ребенок НЕ ходит в школу");
        }

        int univercityElse = 25;
        if (univercityElse > 18) {
            System.out.println("Человек уже закончил школу и может отправляться в университет");
        } else {
            System.out.println("Человек еще не закончил школу");
        }
        int jobElse = 35;
        if (jobElse > 24) {
            System.out.println("Человек окончил университет и ему пора искать первую работу");
        } else {
            System.out.println("Человек еще учится в универитете");
        }
        int trainElse = 30;
        if (trainElse >= 60) {
            System.out.println("В вагоне закончились сидячие места. Можно приобрести стоячее место.");
        } else {
            System.out.println("В вагоне есть свободные сидячие и стоячие места.");
        }
        int goToInfantSchool = 3;
        if (goToInfantSchool > 2 && goToInfantSchool < 7) {
            System.out.println("Если возраст человека равен " + goToInfantSchool + " то ему нужно ходить в детский сад ");
        } else {
            System.out.println("Человек не ходит в детский сад");
        }
        int goToSchool = 15;
        if (goToSchool > 7 && goToSchool < 18) {
            System.out.println("Если возраст человека равен " + goToSchool + ", то ему нужно ходить в школу.");
        } else {
            System.out.println("Человек не ходит в школу");
        }
        int goToUnivercity = 20;
        if (goToUnivercity > 18 && goToUnivercity < 24) {
            System.out.println("Если возраст человека равен " + goToUnivercity + ", то ему нужно ходить университет ");
        } else {
            System.out.println("Человек не ходит в университет");
        }

        int goToJob = 35;
        if (goToJob > 24) {
            System.out.println("Если возраст человека равен " + goToJob + ", то ему нужно ходить на работу");
        }

        int ageAttraction = 25;
        if (ageAttraction < 5) {
            System.out.println("Кататься на аттракционе нельзя!");
        }
        if (ageAttraction > 5 && ageAttraction < 14) {
            System.out.println("Можно кататься только в сопровождении взрослого.");
        }
        if (ageAttraction > 14) {
            System.out.println("Можно кататься без сопровождения взрослого");
        }

        int one = 1;
        int two = 2;
        int three = 3;
        if (one < two || two < three) {
            System.out.println("Большее из чисел " + three);

        }
// Представим, что мы работаем в банке. У нашего банка есть сайт, на который можно зайти с компьютера или телефона, а также мобильное приложение. И нам, и клиенту удобнее с телефона пользоваться мобильным приложением. Поэтому каждый раз, когда пользователь заходит на сайт с телефона, мы должны выдавать ему ссылку на скачивание приложения. Но мы не знаем, iOS или Android он использует.
//Напишите программу, которая определяет, чем пользуется клиент (iOS или Android), и выдает соответствующее сообщение для обоих вариантов.
//Объявите переменную clientOS, которая равна 0 или 1. (0 — iOS, 1 — Android)
//При отработке программы в консоли должно выдаваться сообщение об установке соответствующего приложения.
//Например, для iOS оно будет звучать так:
//«Установите версию приложения для iOS по ссылке».
//А для Android так:
//«Установите версию приложения для Android по ссылке».

        int clientOs = 1;
        if (clientOs == 0) {
            System.out.println("Установите версию приложения для iOS по ссылке");
        } else System.out.println("Установите версию приложения для Android по ссылке");

        //К нам пришли коллеги и сообщили, что нам нужно знать не только операционную систему телефона, но и год его создания: от этого зависит, подойдет ли приложение для телефона или оно просто не установится.
        //Если телефон произведен с 2015 по нынешний год, то приложение будет работать корректно.
        //Если телефон произведен ранее 2015 года, то клиенту нужно посоветовать установить облегченную версию приложения.
        //Ваша задача: написать программу, которая выдает соответствующее сообщение клиенту при наличии двух условий — операционной системы телефона (iOS или Android) и года производства.
        //Если год выпуска ранее 2015 года, то к сообщению об установке нужно добавить информацию об облегченной версии.
        //Например, для iOS оно будет звучать так:
        //«Установите облегченную версию приложения для iOS по ссылке».
        //А для Android так:
        //«Установите облегченную версию приложения для Android по ссылке».
        //При этом для пользователей с телефоном с 2015 года выпуска нужно вывести обычное предложение об установке приложения.
        //Для обозначения года создания используйте переменную clientDeviceYear, где необходимо указать 2015 год.


        int clientDeviceOs = 1;
        int clientDeviceYear = 2014;

        if (clientDeviceOs == 0) {
            if (clientDeviceYear < 2015) {
                System.out.println("Установите облегченную версию приложения для iOS по ссылке");
            } else {
                System.out.println("Установите приложение для iOS по ссылке");
            }
        } else {
            if (clientDeviceOs == 1) {
                if (clientDeviceYear < 2015) {
                    System.out.println("Установите облегченную версию приложения для Android по ссылке");
                } else {
                    System.out.println("Установите приложение для Android по ссылке");
                }
            }
        }

        //Напишите программу, которая определяет, является ли год високосным или нет.
        //Переменную года назовите year, в которую можно подставить значение интересующего нас года. Например, 2021.
        //Программа должна определять, високосный год или нет, и выводить соответствующее сообщение:
        //« …. год является високосным».
        //или
        //«... год не является високосным».
        //Небольшая справка: високосным является каждый четвертый год, но не является каждый сотый. Также високосным является каждый четырехсотый год.

        int year = 2020;

        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
            System.out.println(year + " является високосным");
        } else {
            System.out.println(year + " не является високосным");
        }
        // Вернемся к делам банковским. У нас хороший банк, поэтому для наших клиентов мы организуем доставку банковских карт на дом с четкой датой доставки. Чтобы известить клиента о том, когда будет доставлена его карта, нам нужно знать расстояние от нашего офиса до адреса доставки.
        //Правила доставки такие:
        //Доставка в пределах 20 км занимает сутки.
        //Доставка в пределах от 20 км до 60 км добавляет еще один день доставки.
        //Доставка в пределах 60 км до 100 км добавляет еще одни сутки.
        //То есть с каждым следующим интервалом доставки срок увеличивается на 1 день.
        //Напишите программу, которая выдает сообщение в консоль:
        //"Потребуется дней: " + срок доставки
        //Объявите целочисленную переменную deliveryDistance = 95, которая содержит дистанцию до клиента.

        int deliveryDistance = 95;
        int days = 1;

        if (deliveryDistance > 20) {
            days++;
        }

        if (deliveryDistance > 60) {
            days++;
        }
        System.out.println("Потребуется дней: " + days);

//Напишите программу, которая определяет по номеру месяца в году, к какому сезону этот месяц принадлежит. Например, 1 месяц (он же январь) принадлежит к сезону зима.
//Для написания программы используйте оператор switch. Для обозначения номера месяца используйте переменную monthNumber = 12.
//Пропишите условие, при котором программа не будет выполняться (номер месяца больше 13).

        int monthNumber = 5;

        switch (monthNumber) {
            case 12:
            case 1:
            case 2:
                System.out.println("Зима");
                break;
            case 3:
            case 4:
            case 5:
                System.out.println("Весна");
                break;
            case 6:
            case 7:
            case 8:
                System.out.println("Лето");
                break;
            case 9:
            case 10:
            case 11:
                System.out.println("Осень");
                break;
            default:
                System.out.println("Такого сезона не существует");

        }

    }
}